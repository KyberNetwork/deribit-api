package multicast

import (
	"testing"

	"github.com/stretchr/testify/suite"
)

type PoolTestSuite struct {
	suite.Suite
	p *Pool
}

func TestRamTestSuite(t *testing.T) {
	suite.Run(t, new(PoolTestSuite))
}

func (ts *PoolTestSuite) SetupSuite() {
	ts.p = NewPool(1500)
}

// nolint:funlen
func (ts *PoolTestSuite) TestPutGet() {
	assert := ts.Assert()

	/* Simple case */
	hello := Bytes("Hello")
	world := Bytes("World")
	question := Bytes("What is Lorem Ipsum?")
	answer := Bytes("Lorem Ipsum is simply dummy text of the printing and typesetting industry")

	/* Real case */
	instrumentEvent := Bytes{
		0x8c, 0x00, 0xe8, 0x03, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x67, 0x82, 0x03, 0x00,
		0x01, 0x01, 0x00, 0x01, 0x00, 0x04, 0x01, 0x00, 0x42, 0x54, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x42, 0x54, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x53, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x42, 0x54, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x54, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x28, 0x87, 0x10, 0xf8, 0x82, 0x01, 0x00, 0x00, 0x00, 0x4c, 0x5c, 0x69, 0x83, 0x01, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xdf, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f,
		0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0xb9, 0x3f, 0xfc, 0xa9, 0xf1, 0xd2, 0x4d, 0x62, 0x40, 0x3f,
		0x61, 0x32, 0x55, 0x30, 0x2a, 0xa9, 0x33, 0x3f, 0x61, 0x32, 0x55, 0x30, 0x2a, 0xa9, 0x33, 0x3f,
		0x61, 0x32, 0x55, 0x30, 0x2a, 0xa9, 0x33, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x13, 0x42, 0x54, 0x43, 0x2d, 0x32, 0x33, 0x53,
		0x45, 0x50, 0x32, 0x32, 0x2d, 0x33, 0x32, 0x30, 0x30, 0x30, 0x2d, 0x43, 0x85,
	}

	bookEvent := Bytes{
		0x1d, 0x00, 0xe9, 0x03, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x96, 0x37, 0x03, 0x00,
		0x77, 0xc4, 0x15, 0x0d, 0x83, 0x01, 0x00, 0x00, 0x3c, 0x25, 0x7a, 0x7f, 0x0b, 0x00, 0x00, 0x00,
		0x3d, 0x25, 0x7a, 0x7f, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x12, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x60, 0x4e, 0xd3, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0,
		0x4f, 0xed, 0x40,
	}

	snapshotEvent := Bytes{
		0x16, 0x00, 0xec, 0x03, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x37, 0x03, 0x00,
		0x60, 0xa5, 0x30, 0x16, 0x83, 0x01, 0x00, 0x00, 0x0a, 0x60, 0x88, 0xa0, 0x06, 0x00, 0x00, 0x00,
		0x01, 0x01, 0x11, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcd, 0xcc, 0xcc, 0xcc, 0x4c,
		0x0f, 0xa5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x4f, 0xf2, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x12, 0xa5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x18, 0xa5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x84, 0x2e, 0x41, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x7c, 0xa5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x68, 0xb2, 0x0e, 0x41, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x9e, 0xa5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xa5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xa5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x84, 0x2e,
		0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xee, 0xa5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x08, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0xa6, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x08, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xa6, 0x40, 0x00, 0x00, 0x00, 0x00,
		0x80, 0x84, 0x2e, 0x41, 0x00, 0x33, 0x33, 0x33, 0x33, 0xb3, 0xe5, 0xa6, 0x40, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x40, 0x7f, 0x40, 0x00, 0x66, 0x66, 0x66, 0x66, 0xe6, 0xe5, 0xa6, 0x40, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x8a, 0xa3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0xa7, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x33, 0x33, 0x33, 0x33, 0x33, 0x49, 0xa7, 0x40,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xca, 0x40, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x60, 0xa7,
		0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x40, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x68,
		0xa7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xe8, 0x40, 0x00, 0xcd, 0xcc, 0xcc, 0xcc, 0xcc,
		0x68, 0xa7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xe8, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x70, 0xa7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x84, 0x2e, 0x41, 0x00, 0xcd, 0xcc, 0xcc,
		0xcc, 0xcc, 0x7a, 0xa7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xe8, 0x40, 0x00, 0x9a, 0x99,
		0x99, 0x99, 0x99, 0x7b, 0xa7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xe8, 0x40, 0x00, 0x9a,
		0x99, 0x99, 0x99, 0x19, 0x7c, 0xa7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x89, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xa7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xf8, 0x40,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0xa7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14,
		0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0xa8, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88,
		0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xa8, 0x40, 0x00, 0x00, 0x00, 0x00, 0xc0,
		0xe2, 0xf7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xa8, 0x40, 0x00, 0x00, 0x00, 0x00,
		0x80, 0xea, 0xf7, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd4, 0xa8, 0x40, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xa9, 0x40, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0xa9, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xab, 0x40,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xee, 0xab,
		0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34,
		0xac, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x48, 0xac, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x84, 0xac, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbd, 0x0f, 0x41, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x10, 0xad, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x24, 0xad, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x38, 0xad, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0xad, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40,
		0x00, 0x66, 0x66, 0x66, 0x66, 0xe6, 0x50, 0xad, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
		0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xad, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88,
		0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xad, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe2, 0xad, 0x40, 0x00, 0x00, 0x00, 0x00,
		0x80, 0x84, 0x0e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0xae, 0x40, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x88, 0xd3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0xae, 0x40, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xae, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xae, 0x40,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xc3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6, 0xae,
		0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4,
		0xaf, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x84, 0x0e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x23, 0xb1, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xb0, 0x40, 0x00, 0x9a, 0x99, 0x99, 0x99,
		0xd9, 0xb5, 0xb1, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xae, 0x40, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0xc6, 0xb1, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x4f, 0x12, 0x41, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x80, 0xd4, 0xb1, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0xa9, 0x40, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xeb, 0xb1, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xb0, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xb3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x94, 0x40,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xb4, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xe8,
		0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0xb4, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x39, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xb5, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x6a, 0xf8, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xad, 0xb5, 0x40, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x8a, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xb6, 0x40, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x17, 0xf1, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0xb8, 0x40, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x82, 0xc6, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0xc1, 0x40, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xe0, 0x75, 0x40,
	}

	tradeEvent := Bytes{
		0x04, 0x00, 0xea, 0x03, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x37, 0x03, 0x00,
		0x53, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x99, 0x99, 0x99, 0x99, 0xe3, 0x99,
		0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xa6, 0x40, 0xc6, 0x17, 0xfd, 0x11, 0x83, 0x01, 0x00,
		0x00, 0x1f, 0x85, 0xeb, 0x51, 0xb8, 0xe2, 0x99, 0x40, 0x1f, 0x85, 0xeb, 0x51, 0xb8, 0xe7, 0x99,
		0x40, 0xf6, 0xbe, 0x4d, 0x06, 0x00, 0x00, 0x00, 0x00, 0x5b, 0xa2, 0x84, 0x08, 0x00, 0x00, 0x00,
		0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85,
	}

	ts.p.Put(hello)
	ts.p.Put(world)
	ts.p.Put(question)
	ts.p.Put(answer)

	getAnswer := ts.p.Get()
	getQuestion := ts.p.Get()
	getWorld := ts.p.Get()
	getHello := ts.p.Get()

	ts.p.Put(bookEvent)
	ts.p.Put(instrumentEvent)
	ts.p.Put(snapshotEvent)
	ts.p.Put(tradeEvent)

	getTrade := ts.p.Get()
	getSnapshot := ts.p.Get()
	getInstrument := ts.p.Get()
	getBook := ts.p.Get()

	emptyData := ts.p.Get()

	assert.Equal(answer, getAnswer)
	assert.Equal(question, getQuestion)
	assert.Equal(world, getWorld)
	assert.Equal(hello, getHello)

	assert.Equal(tradeEvent, getTrade)
	assert.Equal(snapshotEvent, getSnapshot)
	assert.Equal(instrumentEvent, getInstrument)
	assert.Equal(bookEvent, getBook)
	assert.Equal(emptyData, make(Bytes, ts.p.maxPacketSize))
}
